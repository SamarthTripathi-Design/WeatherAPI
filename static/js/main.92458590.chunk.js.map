{"version":3,"sources":["Components/Tempapp.js","App.js","index.js"],"names":["Tempapp","useState","city","setcity","search","setsearch","useEffect","a","url","fetch","response","json","reJson","console","log","main","fetchApi","className","type","onChange","e","target","value","temp","temp_min","temp_max","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAsDeA,EApDC,WACd,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,UAArC,mBAAOG,EAAP,KAAeC,EAAf,KAcA,OAZAC,qBAAU,YACM,uCAAG,gCAAAC,EAAA,6DACTC,EADS,2DACiDJ,EADjD,iEAEQK,MAAMD,GAFd,cAETE,EAFS,gBAGMA,EAASC,OAHf,OAGTC,EAHS,OAIfC,QAAQC,IAAIF,GAEZT,EAAQS,EAAOG,MANA,2CAAH,qDAQdC,KACC,CAACZ,IAGF,mCACE,sBAAKa,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SACE,uBACEC,KAAK,SACLD,UAAU,aACVE,SAAU,SAACC,GACTf,EAAUe,EAAEC,OAAOC,YAIvBpB,EAGA,gCACE,sBAAKe,UAAU,OAAf,UACE,qBAAIA,UAAU,WAAd,UACE,mBAAGA,UAAU,uBADf,IAC0Cb,KAE1C,qBAAIa,UAAU,OAAd,cAAuBf,EAAKqB,KAA5B,WACA,qBAAIN,UAAU,cAAd,mBACSf,EAAKsB,SADd,iBACmCtB,EAAKuB,SADxC,cAKF,qBAAKR,UAAU,cACf,qBAAKA,UAAU,cACf,qBAAKA,UAAU,mBAfjB,mBAAGA,UAAU,WAAb,iCCpBKS,MARf,WACE,OACE,qBAAKT,UAAU,MAAf,SACE,cAAC,EAAD,OCDNU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.92458590.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst Tempapp = () => {\r\n  const [city, setcity] = useState(null);\r\n  const [search, setsearch] = useState(\"mumbai\");\r\n\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      const url = `http://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=ecb1b26df11a554d4b6d6c2d85962e20`;\r\n      const response = await fetch(url);\r\n      const reJson = await response.json();\r\n      console.log(reJson);\r\n\r\n      setcity(reJson.main);\r\n    };\r\n    fetchApi();\r\n  }, [search]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"box\">\r\n        <div className=\"inputData\">\r\n          <input\r\n            type=\"search\"\r\n            className=\"inputField\"\r\n            onChange={(e) => {\r\n              setsearch(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        {!city ? (\r\n          <p className=\"errorMsg\">No Data Found</p>\r\n        ) : (\r\n          <div>\r\n            <div className=\"info\">\r\n              <h2 className=\"location\">\r\n                <i className=\"fas fa-street-view\"></i> {search}\r\n              </h2>\r\n              <h1 className=\"temp\"> {city.temp}°C</h1>\r\n              <h3 className=\"tempmin_max\">\r\n                Min : {city.temp_min}°C | Max : {city.temp_max}°C\r\n              </h3>\r\n            </div>\r\n\r\n            <div className=\"wave -one\"></div>\r\n            <div className=\"wave -two\"></div>\r\n            <div className=\"wave -three\"></div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tempapp;\r\n","import Tempapp from \"./Components/Tempapp\";\nimport React from \"react\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Tempapp />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}